{"version":3,"sources":["components/Console/util/SerialConnection.ts","styles/theme.ts","hooks/Theme/index.tsx","components/Console/components/ConnectDeviceMessage/styles.ts","components/Console/components/ConnectDeviceMessage/index.tsx","interfaces/Log/ILog.ts","components/Console/components/ClearButton/styles.ts","components/Console/components/ClearButton/index.tsx","components/Console/components/LogTypeButton/styles.ts","components/Console/components/LogTypeButton/index.tsx","components/Console/components/SearchInput/styles.ts","components/Console/components/SearchInput/index.tsx","components/Console/components/SearchMessage/styles.ts","components/Console/components/SearchMessage/index.tsx","components/Console/components/Header/styles.ts","components/Console/components/Header/index.tsx","components/Console/util/formatLogTimestamp.ts","components/Console/components/Log/styles.ts","components/Console/components/Log/index.tsx","config/baud.ts","components/Console/components/BaudRateSelect/styles.ts","components/Console/components/BaudRateSelect/index.tsx","components/Console/components/ConnectionButton/styles.ts","components/Console/components/ConnectionButton/index.tsx","components/Console/components/ManagementBar/styles.ts","components/Console/components/ManagementBar/index.tsx","components/Console/components/NoResultsMessage/styles.ts","components/Console/components/NoResultsMessage/index.tsx","components/Console/components/ScrollButton/styles.ts","components/Console/components/ScrollButton/index.tsx","components/Console/components/ScrollButtons/styles.ts","components/Console/components/ScrollButtons/index.tsx","components/Console/components/ConsoleLayout/styles.ts","components/Console/components/SendMessage/styles.ts","components/Console/components/SendMessage/index.tsx","components/Console/components/ConsoleLayout/index.tsx","hooks/ScrollDirection/index.tsx","hooks/ScrollThreshold/index.tsx","util/getScrollInfo.ts","util/deepCopy.ts","util/KeyValueManager.ts","util/containString.ts","components/Console/util/getRandomId.ts","components/Console/util/makeLog.ts","components/Console/index.tsx","components/Console/util/filterLogAndCount.ts","components/Console/util/getPageSlice.ts","pages/Home/styles.ts","pages/Home/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["SerialConnection","EventEmitter","constructor","maxChunkLength","super","port","reader","writer","status","this","connect","options","reused","createOrResetConnection","getSerialReader","handleSerialReading","emit","disconnect","stopReading","sendMessage","message","writable","getWriter","write","Buffer","from","e","error","Error","String","console","resetInternalState","stopWriting","_this$writer","releaseLock","_this$reader","closeSerialPort","cancel","_this$port","close","_this$port2","getSerialPort","navigator","serial","requestPort","_this$port$readable","open","readable","getReader","err","strBuffer","value","read","TextDecoder","decode","messages","split","indexOf","slice","forEach","msg","pop","length","darkTheme","breakingPoints","mobile","smallDesktop","colors","icon","yellow","red","page","logArea","logText","warnText","errorText","logBackground","warnBackground","errorBackground","sendBackground","consoleHeader","consoleInput","consoleInputPlaceholder","consoleScrollbar","consoleScrollbarHover","logIcon","warnIcon","errorIcon","infoIcon","managementBar","managementBarText","baudOptionHover","ThemeContext","createContext","Theme","_ref","children","theme","setTheme","useState","switchMode","useCallback","_jsx","Provider","ThemeProvider","Container","styled","div","_templateObject","_taggedTemplateLiteral","Icon","_templateObject2","props","Message","_templateObject3","Button","button","_templateObject4","ButtonText","span","_templateObject5","ButtonIcon","_templateObject6","ConnectDeviceMessage","show","onConnectionRequest","_jsxs","MdUsbOff","onClick","MdUsb","logTypes","logTypeCategoryName","log","warn","command","send","info","Text","IconContainer","ClearButton","FaTrashAlt","Count","typeIcons","FaReceipt","AiFillWarning","MdCancel","FaCode","IoMdSend","AiFillInfoCircle","LogTypeButton","type","count","selected","onSelectChange","handleClick","undefined","title","Input","input","SearchIconContainer","ClearIconContainer","SearchInput","onChange","onClear","rest","placeholder","target","CgSearch","MdClose","Highlight","SearchMessage","search","selectedType","_Fragment","LogTypesContainer","Header","logTypesCount","showClearButton","onSearchChange","onSearchClear","onSelectedTypeChange","onClearLogs","map","key","formatLogTimestamp","date","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","concat","IConContainer","Content","pre","Timestamp","iconMapping","Log","content","timestamp","isFirstOfType","baudRates","Label","ArrowDown","OptionsMask","OptionsListWrapper","OptionsList","ul","Option","li","_templateObject7","OptionText","_templateObject8","OptionIcon","_templateObject9","BaudRateSelect","baud","onBaudChange","showOptions","setShowOptions","maskRef","useRef","IoIosArrowDown","stopPropagation","current","ref","rate","handleOptionClick","BsCheck2","ConnectionButton","isConnected","onConnectionRequestChange","DeviceInfo","ManagementBar","deviceInfo","NoResultsMessage","MdOutlineSpeakerNotesOff","ScrollButton","top","MdOutlineArrowBackIosNew","ScrollButtons","showScrollTop","showScrollDown","onScrollTop","onScrollDown","LogsAndScrollButtonsContainer","LogContainer","SendMessage","onMessageChange","onSend","onKeyDown","ConsoleLayout","_logs","logs","logChunk","logsContainerRef","showScrollTopButton","showScrollDownButton","onSearch","onSelectedType","onScrollTopClick","onScrollDownClick","onSendMessage","setSearch","setSelectedType","handleSearchChange","handleSelectedTypeChange","handleSearchClear","handleClearLogs","index","allLogs","_allLogs","_createElement","id","useScrollDirection","callback","deps","element","lastScroll","useMemo","scrollTop","scrollLeft","diffTop","diffLeft","useEffect","handleScroll","changedYDirection","isOppositeDirection","changedXDirection","x","y","addEventListener","removeEventListener","a","b","useScrollThreshold","threshold","previousFired","scrollHandler","computed","getComputedStyle","width","parseInt","height","offset","Math","max","bottom","scrollHeight","left","right","scrollWidth","ratio","getScrollInfo","fired","checkScrollThreshold","checkFiredRatio","checkFiredOffset","scrollInfo","min","deepCopy","Array","isArray","i","newObj","Object","keys","k","ALL_KEYS_SYMBOL","_KeyValueManager","data","defineProperty","get","set","addChangeListener","_len","arguments","args","_key","addListener","removeChangeListener","_len2","_key2","removeListener","KeyValueManager","containString","source","toLocaleLowerCase","getRandomId","now","Date","random","makeLog","cleanLogCount","initialState","readyToConnect","autoScroll","filteredIndex","filteredLogs","filteredLogTypesCount","Console","kvm","scrollRef","detectUserScroll","renderId","setRenderId","setSendMessage","descriptor","setInterval","clearInterval","handleBaudRateChange","handleSerialChunk","pushNewLogLine","push","handleSerialLine","line","handleSerialSend","handleSerialConnect","handleSerialDisconnect","async","disconnectLog","handleIsConnectedChange","handleFilterChange","handleConnectionChange","baudRate","handleReadyToConnect","filtered","endIndex","startIndex","maxCharCount","len","charCount","filterLogAndCount","isFiltering","pages","ceil","lastPage","logsSlice","getPageSlice","array","pageInfo","start","pageSize","end","handleAutoScrollChange","p","direction","handleScrollTopClick","_scrollRef$current","scrollTo","handleScrollDownClick","handleSearch","handleSelectedType","handleSendMessage","_scrollRef$current2","Home","GlobalStyles","createGlobalStyle","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.720b98cc.chunk.js","sourcesContent":["import { EventEmitter } from \"events\";\n\nexport const serialConnectionStatus = <const>[\n  \"disconnected\",\n  \"connected\", // granted access\n  \"opened\",\n  \"closing\",\n  \"disconnecting\",\n];\n\nexport type SerialConnectionStatus = (typeof serialConnectionStatus)[number];\n\nconst DEFAULT_MAXIMUM_CHUNK_LENGTH = 256;\nexport class SerialConnection extends EventEmitter {\n  private maxChunkLength: number;\n  private port: SerialPort | null;\n  private reader: ReadableStreamDefaultReader<Uint8Array> | null;\n  private writer: WritableStreamDefaultWriter<Uint8Array> | null;\n  private status: SerialConnectionStatus;\n\n  constructor(maxChunkLength?: number) {\n    super();\n\n    this.maxChunkLength = maxChunkLength || DEFAULT_MAXIMUM_CHUNK_LENGTH;\n    this.port = null;\n    this.reader = null;\n    this.writer = null;\n    this.status = \"disconnected\";\n  }\n\n  public async connect(options: SerialOptions) {\n    const reused = await this.createOrResetConnection();\n\n    this.reader = await this.getSerialReader(options);\n\n    this.handleSerialReading();\n\n    this.emit(\"connect\", reused);\n  }\n\n  public async disconnect() {\n    await this.stopReading(true);\n  }\n\n  public sendMessage(message: string) {\n    try {\n      if (this.status !== \"opened\" || !this.port || !this.port.writable) return;\n\n      if (!this.writer) this.writer = this.port.writable.getWriter();\n\n      this.emit(\"send\", message);\n\n      this.writer.write(Buffer.from(message));\n    } catch (e: unknown) {\n      const error = e instanceof Error ? e.message : String(e);\n      console.error(\"Write error:\", error);\n    }\n  }\n\n  private resetInternalState() {\n    this.port = null;\n    this.reader = null;\n    this.writer = null;\n    this.status = \"disconnected\";\n  }\n\n  private stopWriting() {\n    this.writer?.releaseLock();\n    this.writer = null;\n  }\n\n  private async stopReading(disconnect?: boolean) {\n    if (\n      this.status === \"disconnected\" ||\n      (this.status === \"connected\" && !disconnect)\n    )\n      return;\n\n    if (this.status === \"connected\") return await this.closeSerialPort();\n\n    this.status = disconnect ? \"disconnecting\" : \"closing\";\n\n    await this.reader?.cancel();\n  }\n\n  private async closeSerialPort() {\n    if (this.status === \"disconnected\" || !this.port) return;\n\n    this.stopWriting();\n    await this.port?.close();\n    this.resetInternalState();\n  }\n\n  private async createOrResetConnection() {\n    if (this.status === \"opened\") {\n      await this.stopReading();\n      this.stopWriting();\n      await this.port?.close();\n      this.status = \"connected\";\n\n      return true;\n    }\n\n    if (this.port) await this.port.close();\n\n    this.port = await this.getSerialPort();\n    this.status = \"connected\";\n\n    return false;\n  }\n\n  private async getSerialPort() {\n    if (!navigator.serial) throw new Error(\"Serial API not supported\");\n\n    return await navigator.serial.requestPort();\n  }\n\n  private async getSerialReader(options: SerialOptions) {\n    try {\n      if (!this.port) return null;\n\n      await this.port.open(options);\n\n      const reader = this.port.readable?.getReader();\n\n      if (!reader) throw new Error(\"Device can't be read\");\n\n      this.status = \"opened\";\n\n      return reader;\n    } catch (err) {\n      this.resetInternalState();\n      throw err;\n    }\n  }\n\n  private async handleSerialReading() {\n    try {\n      if (!this.port || !this.reader)\n        throw new Error(\"Unable to read the serial port\");\n\n      let strBuffer = \"\";\n\n      while (this.status === \"opened\") {\n        const { value } = await this.reader.read();\n\n        strBuffer += new TextDecoder().decode(value);\n\n        if (!strBuffer) continue;\n\n        const messages = strBuffer.split(\"\\n\");\n\n        this.emit(\"chunk\", messages[0]);\n\n        if (strBuffer.indexOf(\"\\n\") >= 0) {\n          messages.slice(0, -1).forEach((msg) => this.emit(\"line\", msg));\n\n          strBuffer = messages.pop() || \"\";\n        } else if (strBuffer.length > this.maxChunkLength) {\n          this.emit(\"line\", strBuffer);\n          strBuffer = \"\";\n        }\n      }\n\n      this.reader.releaseLock();\n    } catch {\n      this.resetInternalState();\n    } finally {\n      if (this.status === \"closing\") this.status = \"connected\";\n      else if (this.status === \"disconnecting\") await this.closeSerialPort();\n\n      this.emit(\"disconnect\", this.status);\n    }\n  }\n}\n","const config = {\n  breakingPoints: {\n    mobile: 768,\n    smallDesktop: 1024,\n  },\n};\n\nconst darkColors = {\n  icon: \"#89A3F5\",\n  yellow: \"#F1FA8C\",\n  red: \"#FF5555\",\n  page: \"#373849\",\n  logArea: \"#23242F\",\n  logText: \"#D8DCE9\",\n  warnText: \"#F0F0C2\",\n  errorText: \"#FFCECE\",\n  logBackground: \"#2E2F3D\",\n  warnBackground: \"#45462F\",\n  errorBackground: \"#502D2D\",\n  sendBackground: \"#3D415C\",\n  consoleHeader: \"#292B38\",\n  consoleInput: \"#44475A\",\n  consoleInputPlaceholder: \"#A8ABBD\",\n  consoleScrollbar: \"#44475A\",\n  consoleScrollbarHover: \"#53576E\",\n  logIcon: \"#56CCF2\",\n  warnIcon: \"#EBF393\",\n  errorIcon: \"#FF5555\",\n  infoIcon: \"#4e86d9\",\n  managementBar: \"#1E2029\",\n  managementBarText: \"#E0E0E2\",\n  baudOptionHover: \"#272834\",\n};\n\nexport const darkTheme = {\n  ...config,\n  colors: darkColors,\n};\n\nexport type ITheme = typeof darkTheme;\n","import React, { createContext, useCallback, useContext, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { darkTheme } from \"../../styles/theme\";\n\nconst ThemeContext = createContext(() => {});\n\nexport const Theme: React.FC = ({ children }) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  const switchMode = useCallback(() => setTheme(() => darkTheme), []);\n\n  return (\n    <ThemeContext.Provider value={switchMode}>\n      <ThemeProvider theme={theme}>{children as any}</ThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useThemeSwitch = () => useContext(ThemeContext);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 1rem;\n  margin: auto;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  &:nth-child(n + 2) {\n    padding-top: 2rem;\n  }\n\n  &[data-show=\"false\"] {\n    display: none;\n  }\n`;\n\nexport const Icon = styled.div`\n  display: none;\n  font-size: 2.25rem;\n  color: ${(props) => props.theme.colors.icon};\n`;\n\nexport const Message = styled.div`\n  text-align: center;\n  margin-top: 0.5rem;\n  font-size: 1.125rem;\n  color: ${(props) => props.theme.colors.logText};\n`;\n\nexport const Button = styled.button`\n  margin-top: 1.5rem;\n  background-color: ${(props) => props.theme.colors.consoleInput};\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.25rem;\n  cursor: pointer;\n  user-select: none;\n\n  display: flex;\n  align-items: center;\n`;\n\nexport const ButtonText = styled.span`\n  margin-right: 0.375rem;\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.logText};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ButtonIcon = styled.span`\n  font-size: 1.25rem;\n  color: ${(props) => props.theme.colors.icon};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport { MdUsb, MdUsbOff } from \"react-icons/md\";\n\nimport {\n  Button,\n  ButtonIcon,\n  ButtonText,\n  Container,\n  Icon,\n  Message,\n} from \"./styles\";\n\ninterface IProps {\n  show: boolean;\n  onConnectionRequest: () => void;\n}\n\nexport const ConnectDeviceMessage: React.FC<IProps> = ({\n  show,\n  onConnectionRequest,\n}) => (\n  <Container data-show={show}>\n    <Icon>\n      <MdUsbOff />\n    </Icon>\n    <Message>No device connected</Message>\n    <Button onClick={() => onConnectionRequest()}>\n      <ButtonText>Connect</ButtonText>\n      <ButtonIcon>\n        <MdUsb />\n      </ButtonIcon>\n    </Button>\n  </Container>\n);\n","export const logTypes = <const>[\n  \"error\",\n  \"warn\",\n  \"log\",\n  \"command\",\n  \"send\",\n  \"info\",\n];\n\nexport type LogType = typeof logTypes[number];\n\nexport const logTypeCategoryName: Record<LogType, string> = {\n  log: \"Logs\",\n  warn: \"Warns\",\n  error: \"Errors\",\n  command: \"Commands\",\n  send: \"Sent\",\n  info: \"Info\",\n};\n\nexport interface ILog {\n  id: number;\n  type: LogType;\n  content: string;\n  timestamp: Date;\n}\n\nexport type ILogCountByType = Record<LogType, number>;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin-top: 0.5rem;\n  grid-area: clear;\n  background-color: ${(props) => props.theme.colors.consoleInput};\n  border-radius: 0.25rem;\n  padding: 0.25rem 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1rem;\n  user-select: none;\n  cursor: pointer;\n\n  display: flex;\n`;\n\nexport const Text = styled.span`\n  color: ${(props) => props.theme.colors.logText};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const IconContainer = styled.span`\n  margin-left: 0.4rem;\n  color: ${(props) => props.theme.colors.icon};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport { FaTrashAlt } from \"react-icons/fa\";\n\nimport { Container, IconContainer, Text } from \"./styles\";\n\ninterface IProps {\n  onClick: () => void;\n}\n\nexport const ClearButton: React.FC<IProps> = ({ onClick }) => {\n  return (\n    <Container onClick={() => onClick()}>\n      <Text>Clear</Text>\n      <IconContainer>\n        <FaTrashAlt />\n      </IconContainer>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin-top: 0.5rem;\n  background-color: ${(props) => props.theme.colors.consoleInput};\n  border-radius: 0.25rem;\n  padding: 0.25rem 0.5rem;\n  user-select: none;\n  cursor: pointer;\n\n  font-size: 1rem;\n  line-height: 1em;\n\n  display: flex;\n  align-items: center;\n\n  &:nth-child(n + 2) {\n    margin-left: 0.5rem;\n  }\n\n  &[data-type=\"log\"] {\n    color: ${(props) => props.theme.colors.logIcon};\n  }\n\n  &[data-type=\"warn\"] {\n    color: ${(props) => props.theme.colors.warnIcon};\n  }\n\n  &[data-type=\"error\"] {\n    color: ${(props) => props.theme.colors.errorIcon};\n  }\n\n  &[data-type=\"send\"] {\n    color: ${(props) => props.theme.colors.icon};\n  }\n\n  &[data-type=\"info\"] {\n    color: ${(props) => props.theme.colors.infoIcon};\n  }\n\n  &[data-selected=\"true\"] {\n    outline: 2px solid ${(props) => props.theme.colors.icon};\n  }\n`;\n\nexport const Count = styled.span`\n  color: ${(props) => props.theme.colors.logText};\n  margin-left: 0.25rem;\n  font-size: 0.875rem;\n  line-height: 1em;\n`;\n","import React from \"react\";\nimport { IconType } from \"react-icons\";\nimport { AiFillInfoCircle, AiFillWarning } from \"react-icons/ai\";\nimport { FaCode, FaReceipt } from \"react-icons/fa\";\nimport { MdCancel } from \"react-icons/md\";\nimport { IoMdSend } from \"react-icons/io\";\n\nimport { LogType, logTypeCategoryName } from \"../../../../interfaces/Log/ILog\";\n\nimport { Container, Count } from \"./styles\";\n\ninterface IProps {\n  type: LogType;\n  count: number;\n  selected: boolean;\n  onSelectChange: (type: LogType | undefined) => void;\n}\n\nconst typeIcons: Record<LogType, IconType | null> = {\n  log: FaReceipt,\n  warn: AiFillWarning,\n  error: MdCancel,\n  command: FaCode,\n  send: IoMdSend,\n  info: AiFillInfoCircle,\n};\n\nexport const LogTypeButton: React.FC<IProps> = ({\n  type,\n  count,\n  selected,\n  onSelectChange,\n}) => {\n  const Icon = typeIcons[type];\n\n  if ((!count && !selected) || !Icon) return null;\n\n  const handleClick = () => {\n    onSelectChange(selected ? undefined : type);\n  };\n\n  return (\n    <Container\n      data-type={type}\n      data-selected={!!selected}\n      onClick={handleClick}\n      title={logTypeCategoryName[type]}\n    >\n      <Icon />\n      <Count>{count}</Count>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-area: search;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 0.375rem 4rem 0.375rem 0.75rem;\n  background-color: ${(props) => props.theme.colors.consoleInput};\n  border: none;\n  border-radius: 0.25rem;\n  color: ${(props) => props.theme.colors.logText};\n\n  font-size: 1rem;\n  line-height: 1.25rem;\n\n  &::placeholder {\n    color: ${(props) => props.theme.colors.consoleInputPlaceholder};\n  }\n\n  &:focus {\n    outline: 2px solid ${(props) => props.theme.colors.icon};\n  }\n`;\n\nexport const SearchIconContainer = styled.div`\n  position: absolute;\n  right: 0.5rem;\n  top: 0;\n\n  font-size: 1.25rem;\n  height: 2rem;\n  width: 1.5rem;\n  color: ${(props) => props.theme.colors.icon};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ClearIconContainer = styled.div`\n  position: absolute;\n  right: 2rem;\n  top: 0;\n\n  font-size: 1.5rem;\n  height: 2rem;\n  width: 1.5rem;\n  color: ${(props) => props.theme.colors.icon};\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { HTMLAttributes } from \"react\";\nimport { CgSearch } from \"react-icons/cg\";\nimport { MdClose } from \"react-icons/md\";\n\nimport {\n  Container,\n  SearchIconContainer,\n  Input,\n  ClearIconContainer,\n} from \"./styles\";\n\ninterface IProps extends Omit<HTMLAttributes<HTMLElement>, \"onChange\"> {\n  value: string;\n  onChange: (value: string) => void;\n  onClear: () => void;\n}\n\nexport const SearchInput: React.FC<IProps> = ({\n  value,\n  onChange,\n  onClear,\n  ...rest\n}) => {\n  return (\n    <Container {...rest}>\n      <Input\n        placeholder=\"Search\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n      <SearchIconContainer>\n        <CgSearch />\n      </SearchIconContainer>\n      {value ? (\n        <ClearIconContainer title=\"Clear\" onClick={() => onClear()}>\n          <MdClose />\n        </ClearIconContainer>\n      ) : null}\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin-top: 0.5rem;\n  grid-area: message;\n  font-size: 0.875rem;\n  color: ${(props) => props.theme.colors.logText};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nexport const Highlight = styled.span`\n  font-weight: bold;\n`;\n","import React from \"react\";\nimport { LogType, logTypeCategoryName } from \"../../../../interfaces/Log/ILog\";\nimport { Container, Highlight } from \"./styles\";\n\ninterface IProps {\n  search: string;\n  selectedType: LogType | undefined;\n}\n\nexport const SearchMessage: React.FC<IProps> = ({ search, selectedType }) => {\n  return (\n    <Container>\n      {search && (\n        <>\n          Showing results matching <Highlight>{search}</Highlight>\n        </>\n      )}\n      {selectedType &&\n        (search ? (\n          <>\n            {\" \"}\n            in <Highlight>{logTypeCategoryName[selectedType]}</Highlight>{\" \"}\n            category\n          </>\n        ) : (\n          <>\n            Showing results in{\" \"}\n            <Highlight>{logTypeCategoryName[selectedType]}</Highlight> category\n          </>\n        ))}\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 0.5rem;\n  background-color: ${(props) => props.theme.colors.consoleHeader};\n\n  display: grid;\n  grid-template-areas:\n    \"search search\"\n    \"types clear\"\n    \"message message\";\n  grid-template-columns: 1fr auto;\n\n  box-shadow: 0 0.5rem 0.75rem ${(props) => props.theme.colors.logArea};\n  z-index: 2;\n`;\n\nexport const LogTypesContainer = styled.div`\n  grid-area: types;\n\n  display: flex;\n`;\n","import React, { HTMLAttributes } from \"react\";\nimport {\n  ILogCountByType,\n  LogType,\n  logTypes,\n} from \"../../../../interfaces/Log/ILog\";\nimport { ClearButton } from \"../ClearButton\";\nimport { LogTypeButton } from \"../LogTypeButton\";\n\nimport { SearchInput } from \"../SearchInput\";\nimport { SearchMessage } from \"../SearchMessage\";\n\nimport { LogTypesContainer, Container } from \"./styles\";\n\ninterface IProps extends HTMLAttributes<HTMLElement> {\n  search: string;\n  selectedType: LogType | undefined;\n  logTypesCount: ILogCountByType;\n  showClearButton: boolean;\n  onSearchChange: (value: string) => void;\n  onSearchClear: () => void;\n  onSelectedTypeChange: (type: LogType | undefined) => void;\n  onClearLogs: () => void;\n}\n\nexport const Header: React.FC<IProps> = ({\n  search,\n  selectedType,\n  logTypesCount,\n  showClearButton,\n  onSearchChange,\n  onSearchClear,\n  onSelectedTypeChange,\n  onClearLogs,\n  ...rest\n}) => (\n  <Container {...rest}>\n    <SearchInput\n      value={search}\n      onChange={onSearchChange}\n      onClear={onSearchClear}\n    />\n    <LogTypesContainer>\n      {logTypes.map((key) => (\n        <LogTypeButton\n          key={key}\n          type={key}\n          count={logTypesCount[key]}\n          selected={selectedType === key}\n          onSelectChange={onSelectedTypeChange}\n        />\n      ))}\n    </LogTypesContainer>\n    {showClearButton ? <ClearButton onClick={onClearLogs} /> : null}\n    {search || selectedType ? (\n      <SearchMessage search={search} selectedType={selectedType} />\n    ) : null}\n  </Container>\n);\n","export const formatLogTimestamp = (date: Date) => {\n  const hours = date.getHours().toString().padStart(2, \"0\");\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\n  const seconds = date.getSeconds().toString().padStart(2, \"0\");\n\n  return `${hours}:${minutes}:${seconds}`;\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  --icon-color: ${(props) => props.theme.colors.logText};\n\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n  color: ${(props) => props.theme.colors.logText};\n  background-color: ${(props) => props.theme.colors.logBackground};\n  margin-right: 2rem;\n  overflow: hidden;\n\n  display: flex;\n\n  &[data-type=\"warn\"] {\n    --icon-color: ${(props) => props.theme.colors.warnIcon};\n\n    color: ${(props) => props.theme.colors.warnText};\n    background-color: ${(props) => props.theme.colors.warnBackground};\n  }\n\n  &[data-type=\"error\"] {\n    --icon-color: ${(props) => props.theme.colors.errorIcon};\n\n    color: ${(props) => props.theme.colors.errorText};\n    background-color: ${(props) => props.theme.colors.errorBackground};\n  }\n\n  &[data-type=\"send\"] {\n    background-color: ${(props) => props.theme.colors.sendBackground};\n    margin-right: initial;\n    margin-left: 2rem;\n  }\n\n  &[data-type=\"info\"] {\n    background-color: transparent;\n    margin: 0 2rem;\n\n    & > :last-child {\n      align-self: center;\n    }\n  }\n\n  &:nth-child(n + 2) {\n    margin-top: 0.1875rem;\n\n    &[data-first-of-type=\"true\"] {\n      margin-top: 0.5rem;\n    }\n  }\n`;\n\nexport const IConContainer = styled.div`\n  color: var(--icon-color);\n  font-size: 1rem;\n  margin-right: 0.3125rem;\n\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Content = styled.pre`\n  overflow: hidden;\n  flex: 1;\n  font-size: 0.875rem;\n  letter-spacing: 0.75px;\n  line-height: 1.25rem;\n  white-space: break-spaces;\n`;\n\nexport const Timestamp = styled.div`\n  font-size: 0.75rem;\n  align-self: flex-end;\n  margin-left: 1rem;\n  opacity: 0.8;\n`;\n","import React from \"react\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { IconType } from \"react-icons/lib\";\nimport { MdCancel } from \"react-icons/md\";\n\nimport { ILog, LogType } from \"../../../../interfaces/Log/ILog\";\nimport { formatLogTimestamp } from \"../../util/formatLogTimestamp\";\n\nimport { Container, Content, IConContainer, Timestamp } from \"./styles\";\n\ninterface IProps extends ILog {\n  isFirstOfType: boolean;\n}\n\nconst iconMapping: Record<LogType, IconType | null> = {\n  log: null,\n  warn: AiFillWarning,\n  error: MdCancel,\n  command: null,\n  send: null,\n  info: null,\n};\n\nexport const Log: React.FC<IProps> = ({\n  type,\n  content,\n  timestamp,\n  isFirstOfType,\n}) => {\n  const Icon = iconMapping[type];\n\n  return (\n    <Container data-type={type} data-first-of-type={isFirstOfType}>\n      {Icon && (\n        <IConContainer>\n          <Icon />\n        </IConContainer>\n      )}\n      <Content>{content}</Content>\n      <Timestamp>{formatLogTimestamp(timestamp)}</Timestamp>\n    </Container>\n  );\n};\n","export const baudRates = <const>[\n  2_000_000, 1_000_000, 500_000, 250_000, 230_400, 115_200, 57_600, 38_400, 31_250, 28_800, 19_200,\n  14_400, 9_600, 4_800, 2_400, 1_200, 600, 300,\n];\n\nexport const DEFAULT_BAUD_RATE = 115_200;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  --animation-duration: 0.25s;\n\n  height: 2rem;\n  padding: 0 0.5rem;\n  cursor: pointer;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  align-items: center;\n`;\n\nexport const Label = styled.span`\n  color: ${(props) => props.theme.colors.managementBarText};\n  font-size: 0.875rem;\n  line-height: 1em;\n  white-space: nowrap;\n`;\n\nexport const ArrowDown = styled.span`\n  margin-left: 0.25rem;\n  color: ${(props) => props.theme.colors.icon};\n  line-height: 1em;\n  transition-duration: var(--animation-duration);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &[data-rotate=\"true\"] {\n    transform: rotateZ(180deg);\n  }\n`;\n\nexport const OptionsMask = styled.div`\n  --options-top-position: 2rem;\n\n  cursor: default;\n  z-index: 2;\n  opacity: 0;\n  pointer-events: none;\n  transition-duration: var(--animation-duration);\n\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  &[data-show=\"true\"] {\n    --options-top-position: 2.5rem;\n\n    opacity: 1;\n    pointer-events: all;\n  }\n`;\n\nexport const OptionsListWrapper = styled.div`\n  border-radius: 0.25rem;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.25);\n  background-color: ${(props) => props.theme.colors.logBackground};\n  padding: 0.5rem 0;\n  transition-duration: var(--animation-duration);\n\n  position: absolute;\n  top: var(--options-top-position);\n  right: 0.5rem;\n`;\n\nexport const OptionsList = styled.ul`\n  max-height: calc(100vh - 4rem);\n  overflow: hidden auto;\n`;\n\nexport const Option = styled.li`\n  list-style: none;\n  padding: 0.25rem 1rem 0.25rem 2rem;\n  transition-duration: color var(--animation-duration);\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.baudOptionHover};\n  }\n`;\n\nexport const OptionText = styled.span`\n  flex: 1;\n  color: ${(props) => props.theme.colors.logText};\n  font-size: 0.875rem;\n  line-height: 1em;\n  margin-right: 0.5rem;\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const OptionIcon = styled.span`\n  font-size: 1.125rem;\n  line-height: 1em;\n  color: ${(props) => props.theme.colors.icon};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &[data-selected=\"false\"] {\n    opacity: 0;\n  }\n`;\n","import React, { useRef, useState } from \"react\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { BsCheck2 } from \"react-icons/bs\";\n\nimport { baudRates } from \"../../../../config/baud\";\n\nimport {\n  ArrowDown,\n  Container,\n  Label,\n  Option,\n  OptionIcon,\n  OptionsList,\n  OptionsListWrapper,\n  OptionsMask,\n  OptionText,\n} from \"./styles\";\n\ninterface IProps {\n  baud: number;\n  onBaudChange: (baud: number) => void;\n}\n\nexport const BaudRateSelect: React.FC<IProps> = ({ baud, onBaudChange }) => {\n  const [showOptions, setShowOptions] = useState(false);\n  const maskRef = useRef<HTMLDivElement>(null);\n\n  const handleMaskClick: React.MouseEventHandler<HTMLDivElement> = (e) => {\n    e.stopPropagation();\n    if (e.target === maskRef.current) setShowOptions(false);\n  };\n\n  const handleOptionClick = (rate: number) => {\n    onBaudChange(rate);\n    setShowOptions(false);\n  };\n\n  return (\n    <Container onClick={() => setShowOptions(true)}>\n      <Label>{baud} baud</Label>\n      <ArrowDown data-rotate={showOptions}>\n        <IoIosArrowDown />\n      </ArrowDown>\n      <OptionsMask\n        data-show={showOptions}\n        onClick={handleMaskClick}\n        ref={maskRef}\n      >\n        <OptionsListWrapper>\n          <OptionsList>\n            {baudRates.map((rate) => (\n              <Option key={rate} onClick={() => handleOptionClick(rate)}>\n                <OptionText>{rate}</OptionText>\n                <OptionIcon data-selected={rate === baud}>\n                  <BsCheck2 />\n                </OptionIcon>\n              </Option>\n            ))}\n          </OptionsList>\n        </OptionsListWrapper>\n      </OptionsMask>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 2rem;\n  padding: 0 0.5rem;\n  user-select: none;\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n`;\n\nexport const Label = styled.span`\n  color: ${(props) => props.theme.colors.managementBarText};\n  font-size: 0.875rem;\n  line-height: 1em;\n`;\n\nexport const IconContainer = styled.span`\n  color: ${(props) => props.theme.colors.icon};\n  margin-left: 0.25rem;\n  font-size: 1rem;\n  line-height: 1em;\n`;\n","import React from \"react\";\nimport { MdUsb, MdUsbOff } from \"react-icons/md\";\n\nimport { Container, IconContainer, Label } from \"./styles\";\n\ninterface IProps {\n  isConnected: boolean;\n  onConnectionRequestChange: (isConnected: boolean) => void;\n}\n\nexport const ConnectionButton: React.FC<IProps> = ({\n  isConnected,\n  onConnectionRequestChange,\n}) => (\n  <Container onClick={() => onConnectionRequestChange(!isConnected)}>\n    <Label>{isConnected ? \"Disconnect\" : \"Connect\"}</Label>\n    <IconContainer>{isConnected ? <MdUsbOff /> : <MdUsb />}</IconContainer>\n  </Container>\n);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: ${(props) => props.theme.colors.managementBar};\n\n  display: flex;\n  justify-content: space-between;\n\n  z-index: 3;\n`;\n\nexport const DeviceInfo = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  color: ${(props) => props.theme.colors.managementBarText};\n  font-size: 0.875rem;\n  line-height: 1rem;\n  padding: 0.5rem 0.25rem;\n`;\n","import React from \"react\";\nimport { BaudRateSelect } from \"../BaudRateSelect\";\nimport { ConnectionButton } from \"../ConnectionButton\";\n\nimport { Container, DeviceInfo } from \"./styles\";\n\ninterface IProps {\n  deviceInfo: string;\n  baud: number;\n  onConnectionRequestChange: (isConnected: boolean) => void;\n  onBaudChange: (baud: number) => void;\n}\n\nexport const ManagementBar: React.FC<IProps> = ({\n  deviceInfo,\n  baud,\n  onConnectionRequestChange,\n  onBaudChange,\n}) => {\n  return (\n    <Container>\n      <ConnectionButton\n        isConnected={!!deviceInfo}\n        onConnectionRequestChange={onConnectionRequestChange}\n      />\n      <DeviceInfo>{deviceInfo}</DeviceInfo>\n      <BaudRateSelect baud={baud} onBaudChange={onBaudChange} />\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100%;\n  padding: 1rem;\n  overflow-y: auto;\n\n  display: flex;\n`;\n\nexport const Content = styled.div`\n  margin: auto;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Icon = styled.div`\n  font-size: 2.25rem;\n  color: ${(props) => props.theme.colors.icon};\n`;\n\nexport const Message = styled.div`\n  margin-top: 0.5rem;\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.logText};\n`;\n","import React from \"react\";\nimport { MdOutlineSpeakerNotesOff } from \"react-icons/md\";\nimport {\n  Container,\n  Content,\n  Icon,\n  Message,\n} from \"./styles\";\n\nexport const NoResultsMessage: React.FC = () => (\n  <Container>\n    <Content>\n      <Icon>\n        <MdOutlineSpeakerNotesOff />\n      </Icon>\n      <Message>Nothing found</Message>\n    </Content>\n  </Container>\n);\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  width: 1.875rem;\n  height: 1.875rem;\n  border-radius: 50%;\n  background-color: ${(props) => props.theme.colors.icon};\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.5);\n  cursor: pointer;\n  border: none;\n  transition-duration: 0.25s;\n  transition-delay: 0.2s;\n\n  font-size: 1.125rem;\n  color: ${(props) => props.theme.colors.logArea};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > * {\n    transform: rotateZ(270deg);\n  }\n\n  &[data-top=\"true\"] {\n    & > * {\n      transform: rotateZ(90deg);\n    }\n  }\n\n  &[data-show=\"false\"] {\n    opacity: 0;\n    pointer-events: none;\n  }\n`;\n","import React, { HTMLAttributes } from \"react\";\nimport { MdOutlineArrowBackIosNew } from \"react-icons/md\";\n\nimport { Button } from \"./styles\";\n\ninterface IProps extends HTMLAttributes<HTMLElement> {\n  show: boolean;\n  top?: boolean;\n  onClick: () => void;\n}\n\nexport const ScrollButton: React.FC<IProps> = ({ show, top, ...rest }) => (\n  <Button {...rest} data-show={show} data-top={!!top}>\n    <MdOutlineArrowBackIosNew />\n  </Button>\n);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  bottom: 1rem;\n  pointer-events: none;\n\n  & > * {\n    pointer-events: all;\n  }\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n","import React from \"react\";\nimport { ScrollButton } from \"../ScrollButton\";\n\nimport { Container } from \"./styles\";\n\ninterface IProps {\n  showScrollTop: boolean;\n  showScrollDown: boolean;\n  onScrollTop: () => void;\n  onScrollDown: () => void;\n}\n\nexport const ScrollButtons: React.FC<IProps> = ({\n  showScrollTop,\n  showScrollDown,\n  onScrollTop,\n  onScrollDown,\n}) => (\n  <Container>\n    <ScrollButton show={showScrollTop} onClick={onScrollTop} title=\"Top\" top />\n    <ScrollButton show={showScrollDown} onClick={onScrollDown} title=\"Bottom\" />\n  </Container>\n);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100%;\n  width: 100%;\n  max-width: 600px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.colors.logArea};\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LogsAndScrollButtonsContainer = styled.div`\n  flex: 1;\n  position: relative;\n  overflow: hidden;\n`;\n\nexport const LogContainer = styled.ul`\n  height: 100%;\n  padding: 1rem 0.5rem;\n  overflow-y: auto;\n\n  &[data-child-full-size=\"true\"] {\n    display: flex;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-area: search;\n  position: relative;\n  padding: 0.5rem;\n  background-color: ${(props) => props.theme.colors.consoleHeader};\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 0.375rem 2.5rem 0.375rem 0.75rem;\n  background-color: ${(props) => props.theme.colors.consoleInput};\n  border: none;\n  border-radius: 0.25rem;\n  color: ${(props) => props.theme.colors.logText};\n\n  font-size: 1rem;\n  line-height: 1.25rem;\n\n  &::placeholder {\n    color: ${(props) => props.theme.colors.consoleInputPlaceholder};\n  }\n\n  &:focus {\n    outline: 2px solid ${(props) => props.theme.colors.icon};\n  }\n`;\n\nexport const SearchIconContainer = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 0.5rem;\n\n  font-size: 1.25rem;\n  height: 2rem;\n  width: 1.5rem;\n  color: ${(props) => props.theme.colors.icon};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n","import React from \"react\";\n\nimport { Container, Input, SearchIconContainer } from \"./styles\";\nimport { IoMdSend } from \"react-icons/io\";\n\ninterface IProps {\n  message: string;\n  onMessageChange: (message: string) => void;\n  onSend: (message: string) => void;\n}\n\nexport const SendMessage: React.FC<IProps> = ({\n  message,\n  onMessageChange,\n  onSend,\n  ...rest\n}) => {\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") onSend(`${message}\\r\\n`);\n  };\n\n  return (\n    <Container {...rest}>\n      <Input\n        placeholder=\"Send\"\n        value={message}\n        onChange={(e) => onMessageChange(e.target.value)}\n        onKeyDown={handleKeyDown}\n      />\n      <SearchIconContainer>\n        <IoMdSend title=\"Enviar\" onClick={() => onSend(message)} />\n      </SearchIconContainer>\n    </Container>\n  );\n};\n","import React, { MutableRefObject, useState } from \"react\";\n\nimport {\n  ILog,\n  ILogCountByType,\n  LogType,\n} from \"../../../../interfaces/Log/ILog\";\nimport { ConnectDeviceMessage } from \"../ConnectDeviceMessage\";\nimport { Header } from \"../Header\";\nimport { Log } from \"../Log\";\nimport { ManagementBar } from \"../ManagementBar\";\nimport { NoResultsMessage } from \"../NoResultsMessage\";\nimport { ScrollButtons } from \"../ScrollButtons\";\n\nimport {\n  Container,\n  LogContainer,\n  LogsAndScrollButtonsContainer,\n} from \"./styles\";\nimport { SendMessage } from \"../SendMessage\";\n\ninterface IProps {\n  logTypesCount: ILogCountByType;\n  logs: ILog[];\n  logChunk: ILog | null;\n  baud: number;\n  deviceInfo: string;\n  logsContainerRef?: MutableRefObject<Element | undefined>;\n  showScrollTopButton: boolean;\n  showScrollDownButton: boolean;\n  sendMessage: string;\n  onSearch: (search: string) => void;\n  onSelectedType: (selectedType?: LogType) => void;\n  onClearLogs: () => void;\n  onBaudChange: (baud: number) => void;\n  onConnectionRequestChange: (status: boolean) => void;\n  onScrollTopClick: () => void;\n  onScrollDownClick: () => void;\n  onMessageChange: (message: string) => void;\n  onSendMessage: (message: string) => void;\n}\n\nexport const ConsoleLayout: React.FC<IProps> = ({\n  logs,\n  logChunk,\n  baud,\n  deviceInfo,\n  logsContainerRef,\n  logTypesCount,\n  showScrollTopButton,\n  showScrollDownButton,\n  sendMessage,\n  onSearch,\n  onSelectedType,\n  onClearLogs,\n  onBaudChange,\n  onConnectionRequestChange,\n  onScrollTopClick,\n  onScrollDownClick,\n  onMessageChange,\n  onSendMessage,\n}) => {\n  const [search, setSearch] = useState(\"\");\n  const [selectedType, setSelectedType] = useState<LogType | undefined>();\n\n  const handleSearchClear = () => {\n    handleSearchChange(\"\");\n    handleSelectedTypeChange(undefined);\n  };\n\n  const handleClearLogs = () => {\n    handleSearchChange(\"\");\n    handleSelectedTypeChange(undefined);\n    onClearLogs();\n  };\n\n  const handleSearchChange = (value: string) => {\n    setSearch(value);\n    onSearch(value);\n  };\n\n  const handleSelectedTypeChange = (value: LogType | undefined) => {\n    setSelectedType(value);\n    onSelectedType(value);\n  };\n\n  return (\n    <Container>\n      <ManagementBar\n        deviceInfo={deviceInfo}\n        onConnectionRequestChange={onConnectionRequestChange}\n        baud={baud}\n        onBaudChange={onBaudChange}\n      />\n      <Header\n        search={search}\n        logTypesCount={logTypesCount}\n        selectedType={selectedType}\n        showClearButton={!search && !selectedType && !!logs.length}\n        onSearchChange={handleSearchChange}\n        onSelectedTypeChange={handleSelectedTypeChange}\n        onSearchClear={handleSearchClear}\n        onClearLogs={handleClearLogs}\n      />\n      {search && !logs.length ? (\n        <NoResultsMessage />\n      ) : (\n        <LogsAndScrollButtonsContainer>\n          <LogContainer\n            ref={logsContainerRef as any}\n            data-child-full-size={!logs.length}\n          >\n            {logs.map((log, index, allLogs) => (\n              <Log\n                {...log}\n                key={log.id}\n                isFirstOfType={!(allLogs[index - 1]?.type === log.type)}\n              />\n            ))}\n            {logChunk && (\n              <Log\n                {...logChunk}\n                key={logChunk.id}\n                isFirstOfType={!(logs[logs.length - 1]?.type === logChunk.type)}\n              />\n            )}\n            <ConnectDeviceMessage\n              show={!(search || selectedType) && !deviceInfo}\n              onConnectionRequest={() => onConnectionRequestChange(true)}\n            />\n          </LogContainer>\n          <ScrollButtons\n            showScrollTop={showScrollTopButton}\n            showScrollDown={showScrollDownButton}\n            onScrollTop={onScrollTopClick}\n            onScrollDown={onScrollDownClick}\n          />\n        </LogsAndScrollButtonsContainer>\n      )}\n      {!!deviceInfo && (\n        <SendMessage\n          message={sendMessage}\n          onMessageChange={onMessageChange}\n          onSend={onSendMessage}\n        />\n      )}\n    </Container>\n  );\n};\n","import { DependencyList, MutableRefObject, useEffect, useMemo } from \"react\";\n\nexport interface IScrollDirection {\n  x: number;\n  y: number;\n}\n\nexport const useScrollDirection = (\n  callback: (direction: IScrollDirection) => void,\n  deps: DependencyList,\n  ref: MutableRefObject<Element | undefined>\n) => {\n  const element = ref.current;\n\n  const lastScroll = useMemo(\n    () => ({\n      scrollTop: element ? element.scrollTop : 0,\n      scrollLeft: element ? element.scrollLeft : 0,\n      diffTop: 0,\n      diffLeft: 0,\n    }),\n    [element]\n  );\n\n  useEffect(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const handleScroll = () => {\n      const diffTop = element.scrollTop - lastScroll.scrollTop;\n      const diffLeft = element.scrollLeft - lastScroll.scrollLeft;\n\n      const changedYDirection = isOppositeDirection(\n        diffTop,\n        lastScroll.diffTop\n      );\n      const changedXDirection = isOppositeDirection(\n        diffLeft,\n        lastScroll.diffLeft\n      );\n\n      lastScroll.scrollTop = element.scrollTop;\n      lastScroll.scrollLeft = element.scrollLeft;\n      lastScroll.diffTop = diffTop;\n      lastScroll.diffLeft = diffLeft;\n\n      if (changedYDirection || changedXDirection)\n        callback({ x: diffLeft, y: diffTop });\n    };\n\n    element.addEventListener(\"scroll\", handleScroll);\n\n    return () => element.removeEventListener(\"scroll\", handleScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [element, lastScroll, ...deps]);\n};\n\nexport const isOppositeDirection = (a: number, b: number) => a * b < 0;\n","import { DependencyList, MutableRefObject, useEffect } from \"react\";\nimport { getScrollInfo, IScrollInfo } from \"../../util/getScrollInfo\";\n\ninterface IScrollThreshold {\n  offset?: IScrollThresholdOffset;\n  ratio?: IScrollThresholdRatio;\n}\n\ninterface IScrollThresholdOffset {\n  top?: IMinMax;\n  right?: IMinMax;\n  bottom?: IMinMax;\n  left?: IMinMax;\n}\n\ninterface IScrollThresholdRatio {\n  x?: IMinMax;\n  y?: IMinMax;\n}\n\ninterface IMinMax {\n  min?: number;\n  max?: number;\n}\n\ntype FuncType = (\n  callback: (info: IScrollInfo) => void,\n  deps: DependencyList,\n  ref: MutableRefObject<Element | undefined>,\n  threshold: IScrollThreshold\n) => void;\n\nexport const useScrollThreshold: FuncType = (\n  callback,\n  deps,\n  ref,\n  threshold\n) => {\n  const element = ref.current;\n\n  useEffect(() => {\n    if (!element) return;\n\n    let previousFired = false;\n\n    const scrollHandler = (e: Event) => {\n      const info = getScrollInfo(element);\n      const fired = checkScrollThreshold(info, threshold);\n      if (fired && !previousFired) callback(info);\n\n      previousFired = fired;\n    };\n\n    element.addEventListener(\"scroll\", scrollHandler);\n\n    return () => element.removeEventListener(\"scroll\", scrollHandler);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [element, ...deps]);\n};\n\nconst checkScrollThreshold = (\n  info: IScrollInfo,\n  threshold: IScrollThreshold\n) => {\n  return checkFiredRatio(info, threshold) || checkFiredOffset(info, threshold);\n};\n\nconst checkFiredRatio = (\n  scrollInfo: IScrollInfo,\n  threshold: IScrollThreshold\n) => {\n  const info = scrollInfo.ratio;\n\n  if (!threshold.ratio) return false;\n\n  const { x, y } = threshold?.ratio;\n\n  return !!(\n    (x?.min && info.x < x.min) ||\n    (x?.max && info.x > x.max) ||\n    (y?.min && info.y < y.min) ||\n    (y?.max && info.y > y.max)\n  );\n};\n\nconst checkFiredOffset = (\n  scrollInfo: IScrollInfo,\n  threshold: IScrollThreshold\n) => {\n  const info = scrollInfo.offset;\n\n  if (!threshold.offset) return false;\n\n  const { top, bottom, left, right } = threshold?.offset;\n\n  return !!(\n    (top?.min && info.top < top.min) ||\n    (top?.max && info.top > top.max) ||\n    (bottom?.min && info.bottom < bottom.min) ||\n    (bottom?.max && info.bottom > bottom.max) ||\n    (left?.min && info.left < left.min) ||\n    (left?.max && info.left > left.max) ||\n    (right?.min && info.right < right.min) ||\n    (right?.max && info.right > right.max)\n  );\n};\n","export interface IScrollInfo {\n  offset: IScrollOffsetInfo;\n  ratio: IScrollRatioInfo;\n}\n\nexport interface IScrollOffsetInfo {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n}\n\nexport interface IScrollRatioInfo {\n  x: number;\n  y: number;\n}\n\nexport const getScrollInfo = (element: Element): IScrollInfo => {\n  const computed = getComputedStyle(element);\n  const width = parseInt(computed.width);\n  const height = parseInt(computed.height);\n\n  return {\n    offset: {\n      top: Math.max(element.scrollTop, 0),\n      bottom: Math.max(element.scrollHeight - element.scrollTop - height, 0),\n      left: Math.max(element.scrollLeft, 0),\n      right: Math.max(element.scrollWidth - element.scrollLeft - width, 0),\n    },\n    ratio: {\n      x: element.scrollLeft / (element.scrollWidth - width || 1),\n      y: element.scrollTop / (element.scrollHeight - height || 1),\n    },\n  };\n};\n","export function deepCopy<T>(e: T): T {\n  if (Array.isArray(e)) return e.map((i) => deepCopy(i)) as unknown as T;\n\n  if (typeof e !== \"object\" || !e) return e;\n\n  const newObj = {} as T;\n\n  Object.keys(e).forEach(\n    (k) => (newObj[k as keyof T] = deepCopy(e[k as keyof T]))\n  );\n\n  return newObj;\n}\n","import { EventEmitter } from \"events\";\nimport { deepCopy } from \"./deepCopy\";\n\ntype DataCallback<T> = (value: Readonly<T>) => void;\n\ntype MixedListenerArgs<T, K extends keyof T> =\n  | [DataCallback<T>]\n  | [K, DataCallback<T>];\n\nconst ALL_KEYS_SYMBOL = \"__KEY_VALUE_MANAGER_ALL_KEYS_SYMBOL\";\n\nclass _KeyValueManager<T> extends EventEmitter {\n  private data: T;\n\n  constructor(data: T) {\n    super();\n\n    if (typeof data !== \"object\") throw new Error(\"Data must be an object.\");\n\n    this.data = deepCopy(data);\n\n    Object.keys(this.data as object).forEach((k) => {\n      const key = k as keyof T;\n\n      if (k === ALL_KEYS_SYMBOL)\n        throw new Error(`${ALL_KEYS_SYMBOL} is an exclusive object key.`);\n\n      Object.defineProperty(this, k, {\n        get: () => {\n          return this.data[key];\n        },\n\n        set: (value: T[keyof T]) => {\n          this.data[key] = value;\n          this.emit(k.toString(), this.data);\n          return this.data[key];\n        },\n      });\n    });\n  }\n\n  public addChangeListener(callback: DataCallback<T>): this;\n  public addChangeListener<K extends keyof T>(\n    key: K,\n    callback: DataCallback<T>\n  ): this;\n  public addChangeListener<K extends keyof T>(\n    ...args: MixedListenerArgs<T, K>\n  ) {\n    if (args.length === 1) this.addListener(ALL_KEYS_SYMBOL, args[0]);\n    else this.addListener(args[0].toString(), args[1]);\n\n    return this;\n  }\n\n  public removeChangeListener(callback: DataCallback<T>): this;\n  public removeChangeListener<K extends keyof T>(\n    key: K,\n    callback: DataCallback<T>\n  ): this;\n  public removeChangeListener<K extends keyof T>(\n    ...args: MixedListenerArgs<T, K>\n  ) {\n    if (args.length === 1) this.removeListener(ALL_KEYS_SYMBOL, args[0]);\n    else this.removeListener(args[0].toString(), args[1]);\n\n    return this;\n  }\n}\n\ntype KeyValueManager<T> = _KeyValueManager<T> & T;\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const KeyValueManager: new <T>(data: T) => KeyValueManager<T> =\n  _KeyValueManager as any;\n","interface IParams {\n  source: string;\n  search: string;\n}\n\ntype FuncType = (params: IParams) => boolean;\n\nexport const containString: FuncType = ({ source, search }) =>\n  source.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) >= 0;\n","export const getRandomId = () => {\n  const now = Date.now();\n  return now + Math.random() * now;\n};\n","import { ILog, LogType } from \"../../../interfaces/Log/ILog\";\nimport { getRandomId } from \"./getRandomId\";\n\ntype FuncType = (type: LogType, content: string) => ILog;\n\nexport const makeLog: FuncType = (type, content) => ({\n  id: getRandomId(),\n  content,\n  type,\n  timestamp: new Date(),\n});\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { ConsoleLayout } from \"../../components/Console/components/ConsoleLayout\";\nimport { DEFAULT_BAUD_RATE } from \"../../config/baud\";\nimport { useScrollDirection } from \"../../hooks/ScrollDirection\";\nimport { useScrollThreshold } from \"../../hooks/ScrollThreshold\";\nimport { ILog, ILogCountByType, LogType } from \"../../interfaces/Log/ILog\";\nimport { KeyValueManager } from \"../../util/KeyValueManager\";\nimport { filterLogAndCount } from \"./util/filterLogAndCount\";\nimport { getPageSlice } from \"./util/getPageSlice\";\nimport { makeLog } from \"./util/makeLog\";\nimport {\n  SerialConnection,\n  SerialConnectionStatus,\n} from \"./util/SerialConnection\";\n\nconst LOG_PAGE_SIZE = 40; // 40 logs per page\nconst WINDOW_PAGES_SIZE = 3; // 3 * LOG_PAGE_SIZE\nconst RENDER_REFRESH_INTERVAL = 200; // 5x per second\nconst MAX_CHARACTERS_BY_FILTER = 100000;\n\nconst cleanLogCount = {\n  log: 0,\n  error: 0,\n  warn: 0,\n  info: 0,\n  command: 0,\n  send: 0,\n} as ILogCountByType;\n\nconst initialState = {\n  search: \"\",\n  selectedType: undefined as LogType | undefined,\n  logs: [] as ILog[],\n  logChunk: null as ILog | null,\n  page: WINDOW_PAGES_SIZE,\n  baud: DEFAULT_BAUD_RATE,\n  readyToConnect: false,\n  isConnected: false,\n  autoScroll: true,\n  showScrollTopButton: false,\n  showScrollDownButton: false,\n  logTypesCount: { ...cleanLogCount },\n  filteredIndex: 0,\n  filteredLogs: [] as ILog[],\n  filteredLogTypesCount: { ...cleanLogCount },\n};\n\nexport const Console: React.FC = () => {\n  const kvm = useMemo(() => new KeyValueManager(initialState), []);\n  const serial = useMemo(() => new SerialConnection(), []);\n  const scrollRef = useRef<Element>();\n  const detectUserScroll = useRef(false);\n  const [renderId, setRenderId] = useState(0);\n  const [sendMessage, setSendMessage] = useState(\"\");\n\n  useEffect(() => {\n    const descriptor = setInterval(() => {\n      setRenderId((id) => id + 1);\n    }, RENDER_REFRESH_INTERVAL);\n\n    return () => clearInterval(descriptor);\n  }, []);\n\n  const handleClearLogs = useCallback(() => {\n    kvm.page = WINDOW_PAGES_SIZE;\n    kvm.autoScroll = true;\n    kvm.logs = [];\n    kvm.showScrollTopButton = false;\n    kvm.showScrollDownButton = false;\n    kvm.logTypesCount = { ...cleanLogCount };\n\n    setRenderId((id) => id + 1);\n  }, [kvm]);\n\n  const handleBaudRateChange = useCallback(\n    (value: number) => (kvm.baud = value),\n    [kvm]\n  );\n\n  const handleSerialChunk = useCallback(\n    (content: string | null) =>\n      (kvm.logChunk = content ? makeLog(\"log\", content) : null),\n    [kvm]\n  );\n\n  const pushNewLogLine = useCallback(\n    (log: ILog) => {\n      kvm.logChunk = null;\n      kvm.logs.push(log);\n      kvm.logTypesCount[log.type]++;\n    },\n    [kvm]\n  );\n\n  const handleSerialLine = useCallback(\n    (line: string) => pushNewLogLine(makeLog(\"log\", line)),\n    [pushNewLogLine]\n  );\n\n  const handleSerialSend = useCallback(\n    (line: string) => pushNewLogLine(makeLog(\"send\", line)),\n    [pushNewLogLine]\n  );\n\n  const handleSerialConnect = useCallback(\n    (reused: boolean) => {\n      pushNewLogLine(\n        makeLog(\"info\", `Device ${reused ? \"port reopened\" : \"connected\"}`)\n      );\n\n      kvm.isConnected = true;\n    },\n    [kvm, pushNewLogLine]\n  );\n\n  const handleSerialDisconnect = useCallback(\n    async (status: SerialConnectionStatus) => {\n      const msg = `Device ${\n        status === \"disconnected\" ? \"disconnected\" : \"port closed\"\n      }`;\n      const disconnectLog: ILog = makeLog(\"info\", msg);\n\n      if (kvm.logChunk) pushNewLogLine(kvm.logChunk);\n\n      pushNewLogLine(disconnectLog);\n      kvm.logChunk = null;\n      kvm.isConnected = false;\n      kvm.autoScroll = true;\n\n      if (status === \"disconnected\") kvm.readyToConnect = false;\n    },\n    [kvm, pushNewLogLine]\n  );\n\n  useEffect(() => {\n    const handleIsConnectedChange = () => {\n      kvm.autoScroll = kvm.isConnected;\n    };\n\n    kvm.addChangeListener(\"isConnected\", handleIsConnectedChange);\n\n    return () => {\n      kvm.removeChangeListener(\"isConnected\", handleIsConnectedChange);\n    };\n  }, [kvm]);\n\n  useEffect(() => {\n    const handleFilterChange = () => {\n      kvm.page = WINDOW_PAGES_SIZE;\n      kvm.showScrollDownButton = false;\n      kvm.showScrollTopButton = false;\n    };\n\n    kvm.addChangeListener(\"search\", handleFilterChange);\n    kvm.addChangeListener(\"selectedType\", handleFilterChange);\n\n    return () => {\n      kvm.removeChangeListener(\"search\", handleFilterChange);\n      kvm.removeChangeListener(\"selectedType\", handleFilterChange);\n    };\n  }, [kvm]);\n\n  useEffect(() => {\n    serial.addListener(\"chunk\", handleSerialChunk);\n    serial.addListener(\"line\", handleSerialLine);\n    serial.addListener(\"send\", handleSerialSend);\n    serial.addListener(\"connect\", handleSerialConnect);\n    serial.addListener(\"disconnect\", handleSerialDisconnect);\n\n    return () => {\n      serial.removeListener(\"chunk\", handleSerialChunk);\n      serial.removeListener(\"line\", handleSerialLine);\n      serial.removeListener(\"send\", handleSerialSend);\n      serial.removeListener(\"connect\", handleSerialConnect);\n      serial.removeListener(\"disconnect\", handleSerialDisconnect);\n    };\n  }, [\n    handleSerialChunk,\n    handleSerialLine,\n    handleSerialConnect,\n    handleSerialDisconnect,\n    serial,\n  ]);\n\n  useEffect(() => {\n    const handleConnectionChange = async () => {\n      try {\n        if (!kvm.readyToConnect) return;\n\n        await serial.connect({ baudRate: kvm.baud });\n      } catch (err: unknown) {\n        pushNewLogLine(makeLog(\"info\", (err as Error).message));\n\n        kvm.readyToConnect = false;\n      }\n    };\n\n    kvm.addChangeListener(\"readyToConnect\", handleConnectionChange);\n    kvm.addChangeListener(\"baud\", handleConnectionChange);\n\n    return () => {\n      kvm.removeChangeListener(\"readyToConnect\", handleConnectionChange);\n      kvm.removeChangeListener(\"baud\", handleConnectionChange);\n    };\n  }, [kvm, serial, pushNewLogLine]);\n\n  useEffect(() => {\n    const handleReadyToConnect = async () => {\n      if (!kvm.readyToConnect) await serial.disconnect();\n    };\n\n    kvm.addChangeListener(\"readyToConnect\", handleReadyToConnect);\n\n    return () => {\n      kvm.removeChangeListener(\"readyToConnect\", handleReadyToConnect);\n    };\n  }, [kvm, serial]);\n\n  useMemo(() => {\n    kvm.filteredIndex = 0;\n    kvm.filteredLogs = [];\n    kvm.filteredLogTypesCount = { ...cleanLogCount };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [kvm.search, kvm.selectedType, kvm]);\n\n  useMemo(() => {\n    if (!kvm.search && !kvm.selectedType) return;\n\n    const { filtered, count, endIndex } = filterLogAndCount({\n      logs: kvm.logs,\n      search: kvm.search,\n      type: kvm.selectedType,\n      startIndex: kvm.filteredIndex,\n      maxCharCount: MAX_CHARACTERS_BY_FILTER,\n    });\n\n    kvm.filteredIndex = endIndex;\n    kvm.filteredLogs.push(...filtered);\n\n    for (const k in count) {\n      const key = k as keyof ILogCountByType;\n      kvm.filteredLogTypesCount[key] += count[key];\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [renderId, kvm]);\n\n  const isFiltering = !!(kvm.search || kvm.selectedType);\n\n  let filteredLogs = isFiltering ? kvm.filteredLogs : kvm.logs;\n  let filteredLogTypesCount = isFiltering\n    ? kvm.filteredLogTypesCount\n    : kvm.logTypesCount;\n\n  const pages = Math.max(\n    Math.ceil(filteredLogs.length / LOG_PAGE_SIZE),\n    WINDOW_PAGES_SIZE\n  );\n\n  const lastPage = Math.max(pages, WINDOW_PAGES_SIZE);\n\n  if (kvm.autoScroll) kvm.page = lastPage;\n\n  const logsSlice = getPageSlice(filteredLogs, {\n    page: kvm.page,\n    pages: WINDOW_PAGES_SIZE,\n    pageSize: LOG_PAGE_SIZE,\n  });\n\n  useEffect(() => {\n    const handleAutoScrollChange = () => {\n      if (kvm.autoScroll) kvm.page = lastPage;\n    };\n\n    kvm.addChangeListener(\"autoScroll\", handleAutoScrollChange);\n\n    return () => {\n      kvm.removeChangeListener(\"autoScroll\", handleAutoScrollChange);\n    };\n  }, [kvm, lastPage]);\n\n  useScrollThreshold(\n    () => {\n      const p = kvm.page;\n      kvm.page = p > WINDOW_PAGES_SIZE ? p - 1 : p;\n    },\n    [],\n    scrollRef,\n    { offset: { top: { min: 1000 } } }\n  );\n\n  useScrollThreshold(\n    () => {\n      const p = kvm.page;\n      kvm.page = p > WINDOW_PAGES_SIZE ? p - 1 : p;\n    },\n    [],\n    scrollRef,\n    { offset: { top: { min: 200 } } }\n  );\n\n  useScrollThreshold(\n    () => {\n      const p = kvm.page;\n      kvm.page = p < pages ? p + 1 : p;\n    },\n    [pages],\n    scrollRef,\n    { offset: { bottom: { min: 1000 } } }\n  );\n\n  useScrollThreshold(\n    () => {\n      const p = kvm.page;\n      kvm.page = p < pages ? p + 1 : p;\n    },\n    [pages],\n    scrollRef,\n    { offset: { bottom: { min: 200 } } }\n  );\n\n  useScrollThreshold(\n    () => {\n      const page = kvm.page;\n\n      if (page === lastPage) {\n        kvm.autoScroll = true;\n        kvm.showScrollDownButton = false;\n      }\n    },\n    [lastPage],\n    scrollRef,\n    { offset: { bottom: { min: 100 } } }\n  );\n\n  useScrollThreshold(\n    () => {\n      if (kvm.autoScroll && detectUserScroll.current) kvm.autoScroll = false;\n    },\n    [],\n    scrollRef,\n    { offset: { bottom: { max: 1 } } }\n  );\n\n  useScrollThreshold(\n    () => {\n      if (kvm.page === WINDOW_PAGES_SIZE) kvm.showScrollTopButton = false;\n    },\n    [],\n    scrollRef,\n    { offset: { top: { min: 200 } } }\n  );\n\n  useScrollDirection(\n    (direction) => (kvm.showScrollTopButton = direction.y < 0),\n    [],\n    scrollRef\n  );\n\n  useScrollDirection(\n    (direction) =>\n      (kvm.showScrollDownButton = direction.y > 0 && !kvm.autoScroll),\n    [],\n    scrollRef\n  );\n\n  const handleScrollTopClick = useCallback(() => {\n    kvm.autoScroll = false;\n    kvm.page = WINDOW_PAGES_SIZE;\n    kvm.showScrollTopButton = false;\n\n    scrollRef.current?.scrollTo(0, 0);\n  }, [kvm]);\n\n  const handleScrollDownClick = useCallback(() => {\n    kvm.autoScroll = true;\n    kvm.showScrollDownButton = false;\n  }, [kvm]);\n\n  const handleSearch = useCallback(\n    (value: string) => (kvm.search = value),\n    [kvm]\n  );\n\n  const handleSelectedType = useCallback(\n    (value: LogType | undefined) => (kvm.selectedType = value),\n    [kvm]\n  );\n\n  const handleReadyToConnect = useCallback(\n    (value: boolean) => (kvm.readyToConnect = value),\n    [kvm]\n  );\n\n  const handleSendMessage = useCallback(\n    (message: string) => {\n      setSendMessage(\"\");\n      serial.sendMessage(message);\n    },\n    [serial]\n  );\n\n  useEffect(() => {\n    detectUserScroll.current = true;\n\n    if (kvm.autoScroll)\n      scrollRef.current?.scrollTo(0, scrollRef.current.scrollHeight);\n  }, [kvm, renderId]);\n\n  detectUserScroll.current = false;\n\n  return (\n    <ConsoleLayout\n      logs={logsSlice}\n      logChunk={isFiltering ? null : kvm.logChunk}\n      baud={kvm.baud}\n      deviceInfo={kvm.isConnected ? \"Connected\" : \"\"}\n      logsContainerRef={scrollRef}\n      logTypesCount={filteredLogTypesCount}\n      showScrollTopButton={kvm.showScrollTopButton}\n      showScrollDownButton={kvm.showScrollDownButton}\n      sendMessage={sendMessage}\n      onSearch={handleSearch}\n      onSelectedType={handleSelectedType}\n      onClearLogs={handleClearLogs}\n      onBaudChange={handleBaudRateChange}\n      onConnectionRequestChange={handleReadyToConnect}\n      onScrollTopClick={handleScrollTopClick}\n      onScrollDownClick={handleScrollDownClick}\n      onMessageChange={setSendMessage}\n      onSendMessage={handleSendMessage}\n    />\n  );\n};\n","import {\n  ILog,\n  ILogCountByType,\n  LogType,\n  logTypes,\n} from \"../../../interfaces/Log/ILog\";\nimport { containString } from \"../../../util/containString\";\n\ntype FuncType = (params: IParams) => IResponse;\n\ninterface IParams {\n  logs: ILog[];\n  search: string;\n  type?: LogType;\n  startIndex: number;\n  maxCharCount: number;\n}\n\ninterface IResponse {\n  filtered: ILog[];\n  count: ILogCountByType;\n  endIndex: number;\n}\n\nexport const filterLogAndCount: FuncType = ({\n  logs,\n  search,\n  type,\n  startIndex,\n  maxCharCount,\n}) => {\n  const count = {} as ILogCountByType;\n  logTypes.forEach((type) => (count[type] = 0));\n\n  const filtered = [] as ILog[];\n\n  let i = startIndex;\n\n  for (\n    let len = logs.length, charCount = 0;\n    i < len && charCount < maxCharCount;\n    i += 1\n  ) {\n    const log = logs[i];\n\n    if (type && type !== log.type) continue;\n\n    if (search && !containString({ source: log.content, search })) continue;\n\n    filtered.push(log);\n    count[log.type] += 1;\n    charCount += log.content.length;\n  }\n\n  return { filtered, count, endIndex: i };\n};\n","type FuncType = <T>(array: T[], pageInfo: IPageInfo) => T[];\n\ninterface IPageInfo {\n  page: number;\n  pages: number;\n  pageSize: number;\n}\n\nexport const getPageSlice: FuncType = (array, pageInfo) => {\n  const start = (pageInfo.page - pageInfo.pages) * pageInfo.pageSize;\n  const end = start + pageInfo.pageSize * pageInfo.pages;\n\n  return array.slice(start, end);\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  background-color: ${(props) => props.theme.colors.page};\n\n  display: flex;\n  justify-content: flex-end;\n`;\n","import React from \"react\";\nimport { Console } from \"../../components/Console\";\n\nimport { Container } from \"./styles\";\n\nexport const Home: React.FC = () => (\n  <Container>\n    <Console />\n  </Container>\n);\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: none;\n    font-family: \"Roboto\", sans-serif;\n  }\n\n\n  // webkit based browsers\n\n  ::-webkit-scrollbar {\n    width: 0.5rem;\n    height: 0.5rem;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: ${(props) => props.theme.colors.consoleScrollbar};\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: ${(props) => props.theme.colors.consoleScrollbarHover};\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n\n  // mozila only\n\n  * {\n    scrollbar-width: thin;\n    scrollbar-color: ${(props) =>\n      props.theme.colors.consoleScrollbar} transparent;\n  }\n`;\n","import React from \"react\";\n\nimport { Theme } from \"./hooks/Theme\";\n\nimport { Home } from \"./pages/Home\";\nimport { GlobalStyles } from \"./styles/global\";\n\nexport const App: React.FC = () => (\n  <Theme>\n    <GlobalStyles />\n    <Home />\n  </Theme>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}